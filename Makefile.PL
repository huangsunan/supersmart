#!/usr/bin/perl
use strict;
use warnings;
use lib 'lib';
use ExtUtils::MakeMaker;

WriteMakefile(
	'NAME' => 'Bio::Phylo::PhyLoTA',
	'PREREQ_PM' => {
		'DBIx::Class'           => 0,
		'DBI'                   => 0,
		'DBD::mysql'            => 0,
		'Template'              => 0,
		'Config::Tiny'          => 0,
		'Moose'                 => 0,
		'XML::Twig'             => 0,
		'HTML::Parser'          => 0,
		'JSON'                  => 0,
		'Math::Random'          => 0,
		'App::Cmd'              => 0,
		'String::RewritePrefix' => 0,
		'IO::String'            => 0,
		'Statistics::R'         => 0,
		'Parallel::ForkManager' => 0,
		# 'Parallel::MPI::Simple' => 0,
		
		# XXX would be good if there was some way to define a dependency on
		# git repositories such that `cpanm --installdeps .` would be able
		# to pick it up. Doesn't work here, but maybe in the extended
		# meta merge stuff?
		# 'BioPerl'               => 0,
		# 'BioPerl-Run'           => 0,
		# 'Bio::Phylo'            => 0, 
	}
);

package MY;
use FindBin '$Bin';

sub postamble {
	my $package = shift;
	
	# make target will be called 'vagrant'
	my $result = <<'SETUP';
# This target is generated by MY::postamble to create
# a new vagrant box for upload to the vagrant cloud.
# The box is built on top of plain ubuntu 14.04LTS. Many
# of the directives that end up in this target are parsed
# out of the 'install:' section in .travis.yml
vagrant:
	$(RM_RF) Vagrantfile .vagrant
	vagrant init ubuntu/trusty64
	vagrant up
	vagrant ssh -c 'wget -O - https://cpanmin.us | sudo perl - App::cpanminus'
	vagrant ssh -c 'sudo apt-get install -y git'
	vagrant ssh -c 'git clone https://github.com/naturalis/supersmart.git'
SETUP
	
	# check out code
	my $pre = "\t" . "vagrant ssh -c 'cd supersmart && ";
	
	# read shell install commands from .travis.yml
	my @commands = _install_commands();
	$result .= join '', 
	            map { "${pre}$_'\n" } 
	            map { /cpanm/ ? "sudo $_" : $_ }
	           grep { $_ !~ /vagrant/ } @commands;
	
	# run unit tests
	$result .= <<'TEST';
	vagrant ssh -c 'cd supersmart && perl Makefile.PL && make test'
TEST
		
	# finally, remove the Vagrantfile
	$result .= "\t\$(RM_RF) Vagrantfile .vagrant\n";
	return $result;
}


sub _install_commands {
	my $package = shift;
	my $travis_yml = "${Bin}/.travis.yml";
	my ( @commands, $install_seen );
	open my $fh, '<', $travis_yml or die $!;
	LINE: while(<$fh>) {
		chomp;
		if ( /^install:\s*$/ ) {
			$install_seen++;
			next LINE;
		}
		if ( $install_seen and /^\s*-\s*"(.+)"\s*$/ ) {
			my $command = $1;
			push @commands, $command;
		}
	}
	return @commands;
}

