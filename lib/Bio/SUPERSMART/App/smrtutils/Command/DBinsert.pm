package Bio::SUPERSMART::App::smrtutils::Command::DBinsert;

use strict;
use warnings;

use Bio::Phylo::IO qw(parse unparse);
use Bio::Phylo::Util::CONSTANT ':objecttypes';

use Bio::Phylo::PhyLoTA::Service::MarkersAndTaxaSelector;

use base 'Bio::SUPERSMART::App::SubCommand';
use Bio::SUPERSMART::App::smrtutils qw(-command);

# ABSTRACT: 

=head1 NAME

DBinsert - insert custom sequences and taxa into database

=head1 SYNOPSYS


=head1 DESCRIPTION

=cut

sub options {    
	my ($self, $opt, $args) = @_;
	my $format_default = 'fasta';
	my $prefix_default = 'SMRT';
	return (
		['alignment|a=s', "alignment file(s) to insert into database, multiple files should be separatet by commata", { arg => 'file' } ],		
		['list|l=s', "list of alignment files to insert into database", { arg => 'file' } ],		
		['prefix|p=s', "prefix for generated accessions, defaults to $prefix_default", {default => $prefix_default}],
		['desc|d=s', "description for sequence(s)", {}],
		['format|f=s', "format of input alignemnt files, default: $format_default", { default => $format_default }],
		['generate_fasta|g', "generate FASTA files compatible with smrt commands. FASTA file names will have the suffix '-smrt-inserted'. This option is enabled by default", {default => 1} ]
	    );	
}

sub validate {
	my ($self, $opt, $args) = @_;			
	$self->usage_error('need either alignment or list argument') if not ($opt->alignment or $opt->list);
}

sub run {
	my ($self, $opt, $args) = @_;    
	
	my $logger = $self->logger;      	
	my $mts = Bio::Phylo::PhyLoTA::Service::MarkersAndTaxaSelector->new;
	
	my @files;
	if ( my $aln_str = $opt->alignment ) {
		push @files, split(',', $aln_str);
	}
	if ( my $aln_list = $opt->list ) {
		$logger->info("going to read alignment file list $aln_list");
		open my $fh, '<', $aln_list or die $!;
		my @al = <$fh>;
		close $fh;
		chomp @al; 
		push @files, @al;
	}
	$logger->info( 'Got file names of ' . scalar(@files) . ' to proecess' );
	
	my $seq_cnt = 0;
	# retrieve matrix object(s) from file(s)
	for my $file ( @files ) {
		$logger->info ("Processing alignment file $file");
		# create matrix object from file
		my $project = parse(
			'-format'     => $opt->format,
			'-type'       => 'dna',
			'-file'       => $file,
			'-as_project' => 1,
		    );
		my ($matrix) = @{ $project->get_items(_MATRIX_) };
		
		# iterate over sequences and insert into database
		for my $seq ( @{$matrix->get_entities} ) {
			my $id;
			my $name = $seq->get_name;
			if ( $name=~/^[0-9]+?/ ) {
				$id = $name;
			} 
			else {
				$logger->info("Descriptor of sequence $name does not look like taxon ID, trying to map id");
				$name =~ s/_/ /g;
				$logger->info("Trying to find $name");
				my ($node) = $mts->get_nodes_for_names($name);
				if ( ! $node ) {
					$logger->warn("Could not map taxon name $name, ignoring");
					# delete sequence from matrix object, so it won't appear in output fasta 
					$matrix->delete($seq);
					next;
				}				
				$id = $node->ti;
				$logger->info("Remapped $name to $id");
			}
			# gather fields required for 'seqs' table in phylota
			my $division = 'INV';
			my $acc_vers = 1;
			my $unaligned = $seq->get_unaligned_char;
			my $length = length($unaligned);
			my $gbrel = '000';
			my $def = $opt->desc || "";
			
			$def .= " -- entry generated by SUPERSMART " . $Bio::SUPERSMART::VERSION . " --";

			my %seqids = $mts->generate_seqids($opt->prefix);
			
			my $gi = $seqids{'gi'};
			my $acc = $seqids{'acc'};
			
			my $ti = $id;

			# set accession date to today
			my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime();
			my $acc_date = join("-", $year + 1900, $mon, $mday);

			$mts->insert_seq({gi=>$gi, ti=>$ti, acc=>$acc, acc_vers=>$acc_vers, length=>length($unaligned), division=>$division, acc_date=>$acc_date, gbrel=>$gbrel, def=>$def, seq=>$unaligned});

			# write FASTA file with definition line compatible with other smrt commands
			# since the newly inserted seqs have no cluster,  we set the seed gi to the gi of the sequence
			# and the mrca to the taxon id of the sequence
			my $defline = "gi|$gi|seed_gi|$gi|taxon|$ti|mrca/1-" . length($seq->get_char);
			$seq->set_generic('fasta_def_line', $defline);
			

			$seq_cnt++;
			
		}
		if ( $opt->generate_fasta ) {
			# write sequence with new defline to file if generate_fasta flag is given
			(my $newfile = $file) =~ s/\-[^\.]*$//;
			# file extension removed, add .fa
			$newfile .= '-smrt-inserted.fa';
			$logger->info("Writing alignment to $newfile");
			unparse ( -phylo => $matrix, -file => $newfile, -format=>'fasta' );
		}	
	}
	$logger->info("DONE. Inserted $seq_cnt sequences into database");   	
}

1;
